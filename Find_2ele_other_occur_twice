import java.util.ArrayList;

class HelloWorld {

    public static ArrayList<Integer> uniqueTwiceNo(int[] A) {
        ArrayList<Integer> ref = new ArrayList<Integer>();

        int n = A.length;
        int xor = 0;

        // XOR all the elements to get the XOR of the two unique numbers
        for (int i = 0; i < n; i++) {
            xor = xor ^ A[i];
        }

        // Find the rightmost set bit in xor (where the two unique numbers differ)
        int pos = -1;
        for (int i = 0; i < 32; i++) {
            if ((xor & (1 << i)) != 0) {
                pos = i;
                break;
            }
        }

        // Categorize the numbers based on the bit at 'pos'
        int num1 = 0;
        int num2 = 0;
        for (int i = 0; i < n; i++) {
            // Check if the 'pos' bit is set in the current number
            if ((A[i] & (1 << pos)) != 0) {
                num1 = num1 ^ A[i]; // XOR for the first unique number
            } else {
                num2 = num2 ^ A[i]; // XOR for the second unique number
            }
        }

        // Add the two unique numbers to the result list
        ref.add(num1);
        ref.add(num2);

        return ref;
    }

    public static void main(String[] args) {
        int[] A = {4, 5, 4, 1, 6, 6, 5, 3};
        ArrayList<Integer> ref = uniqueTwiceNo(A);
        System.out.println(ref);
    }
}
